{
  "id": "api/operators/materialize",
  "title": "materialize",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/materialize.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L61\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/materialize.ts#L6-L61\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/materialize\", \"name\": \"materialize\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>materialize</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Represents all of the notifications from the source Observable as <code>next</code>\nemissions marked with their original types within <a href=\"api/index/class/Notification\"><code>Notification</code></a>\nobjects.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> materialize&#x3C;T>(): OperatorFunction&#x3C;T, Notification&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Notification&#x3C;T>></code>: An Observable that emits\n<a href=\"api/index/class/Notification\"><code>Notification</code></a> objects that wrap the original emissions from the source\nObservable with metadata.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Wraps <code>next</code>, <code>error</code> and <code>complete</code> emissions in\n<a href=\"api/index/class/Notification\"><code>Notification</code></a> objects, emitted as <code>next</code> on the output Observable.\n</span></p>\n<p><img src=\"/assets/images/marble-diagrams/materialize.png\" width=\"100%\" alt=\"materialize marble diagram\"></p>\n<p><code>materialize</code> returns an Observable that emits a <code>next</code> notification for each\n<code>next</code>, <code>error</code>, or <code>complete</code> emission of the source Observable. When the\nsource Observable emits <code>complete</code>, the output Observable will emit <code>next</code> as\na Notification of type \"complete\", and then it will emit <code>complete</code> as well.\nWhen the source Observable emits <code>error</code>, the output will emit <code>next</code> as a\nNotification of type \"error\", and then <code>complete</code>.</p>\n<p>This operator is useful for producing metadata of the source Observable, to\nbe consumed as <code>next</code> emissions. Use it in conjunction with\n<a href=\"api/operators/dematerialize\"><code>dematerialize</code></a>.</p>\n<h2>Example</h2>\n<p>Convert a faulty Observable to an Observable of Notifications</p>\n<code-example language=\"ts\">\nimport { of } from 'rxjs';\nimport { materialize, map } from 'rxjs/operators';\n\nconst letters = of('a', 'b', 13, 'd');\nconst upperCase = letters.pipe(map(x => x.toUpperCase()));\nconst materialized = upperCase.pipe(materialize());\nmaterialized.subscribe(x => console.log(x));\n\n// Results in the following:\n// - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n// - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n// - Notification {kind: \"E\", value: undefined, error: TypeError:\n//   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n//   [as project] (http://1â€¦, hasValue: false}\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/class/Notification\"><code>Notification</code></a>\n</li>\n    <li><a href=\"api/operators/dematerialize\"><code>dematerialize</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/class/Notification\n - api/operators\n - api/operators/dematerialize\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/Notification\n - api/operators\n - api/operators/dematerialize\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/materialize.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L61\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/materialize.ts#L6-L61\n-->"
}