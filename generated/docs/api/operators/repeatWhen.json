{
  "id": "api/operators/repeatWhen",
  "title": "repeatWhen",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/repeatWhen.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L29\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/repeatWhen.ts#L12-L29\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/repeatWhen\", \"name\": \"repeatWhen\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>repeatWhen</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns an Observable that mirrors the source Observable with the exception of a <code>complete</code>. If the source\nObservable calls <code>complete</code>, this method will emit to the Observable returned from <code>notifier</code>. If that Observable\ncalls <code>complete</code> or <code>error</code>, then this method will call <code>complete</code> or <code>error</code> on the child subscription. Otherwise\nthis method will resubscribe to the source Observable.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> repeatWhen&#x3C;T>(notifier: (notifications: Observable&#x3C;any>) => Observable&#x3C;any>): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>notifier</td>\n      \n      <td class=\"param-description\">\n      <p>        Receives an Observable of notifications with\nwhich a user can <code>complete</code> or <code>error</code>, aborting the repetition.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: The source Observable modified with repeat logic.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/repeatWhen.png\" width=\"100%\" alt=\"repeatWhen marble diagram\"></p>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/repeat\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/repeatWhen.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L29\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/repeatWhen.ts#L12-L29\n-->"
}