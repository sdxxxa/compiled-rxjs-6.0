{
  "id": "api/operators/combineAll",
  "title": "combineAll",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/combineAll.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L57\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/combineAll.ts#L9-L57\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/combineAll\", \"name\": \"combineAll\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>combineAll</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Flattens an Observable-of-Observables by applying <a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a> when the Observable-of-Observables completes.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> combineAll&#x3C;T, R>(project?: (...values: Array&#x3C;any>) => R): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(...values: Array<any>) => R</any></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code>: </p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/combineAll.png\" width=\"100%\" alt=\"combineAll marble diagram\"></p>\n<p><code>combineAll</code> takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\nit subscribes to all collected Observables and combines their values using the <a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a> strategy, such that:</p>\n<ul>\n<li>Every time an inner Observable emits, the output Observable emits</li>\n<li>\n<p>When the returned observable emits, it emits all of the latest values by:</p>\n<ul>\n<li>If a <code>project</code> function is provided, it is called with each recent value from each inner Observable in whatever order they\narrived, and the result of the <code>project</code> function is what is emitted by the output Observable.</li>\n<li>If there is no <code>project</code> function, an array of all the most recent values is emitted by the output Observable.</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>Examples</h2>\n<h3>Map two click events to a finite interval Observable, then apply <code>combineAll</code></h3>\n<code-example language=\"ts\">\nimport { fromEvent, interval } from 'rxjs';\nimport { map, combineAll, take } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst higherOrder = clicks.pipe(\n  map(ev =>\n     interval(Math.random() * 2000).pipe(take(3))\n  ),\n  take(2)\n);\nconst result = higherOrder.pipe(\n  combineAll()\n);\n\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> combineAll(): OperatorFunction&#x3C;ObservableInput&#x3C;T>, T[]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;ObservableInput&#x3C;T>, T[]></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> combineAll(): OperatorFunction&#x3C;any, T[]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;any, T[]></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> combineAll(project: (...values: T[]) => R): OperatorFunction&#x3C;ObservableInput&#x3C;T>, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(...values: T[]) => R</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;ObservableInput&#x3C;T>, R></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> combineAll(project: (...values: Array&#x3C;any>) => R): OperatorFunction&#x3C;any, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(...values: Array<any>) => R</any></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;any, R></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/combineLatest\"><code>combineLatest</code></a>\n</li>\n    <li><a href=\"api/operators/mergeAll\"><code>mergeAll</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/function/combineLatest\n - api/operators\n - api/operators/concatAll\n - api/operators/exhaust\n - api/operators/mergeAll\n - api/operators/switchAll\n-->\n<!-- links from this doc:\n - /api\n - api/index/function/combineLatest\n - api/operators\n - api/operators/mergeAll\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/combineAll.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L57\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/combineAll.ts#L9-L57\n-->"
}