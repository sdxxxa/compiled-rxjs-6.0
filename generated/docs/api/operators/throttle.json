{
  "id": "api/operators/throttle",
  "title": "throttle",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttle.ts?message=docs(operators)%3A%20describe%20your%20change...#L21-L71\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/throttle.ts#L21-L71\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/throttle\", \"name\": \"throttle\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>throttle</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Emits a value from the source Observable, then ignores subsequent source\nvalues for a duration determined by another Observable, then repeats this\nprocess.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> throttle&#x3C;T>(durationSelector: (value: T) => SubscribableOrPromise&#x3C;any>, config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n      <p>        A function\nthat receives a value from the source Observable, for computing the silencing\nduration for each source value, returned as an Observable or a Promise.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>config</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>defaultThrottleConfig</code>.</p>\n<p>        a configuration object to define <code>leading</code> and <code>trailing</code> behavior. Defaults\nto <code>{ leading: true, trailing: false }</code>.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that performs the throttle operation to\nlimit the rate of emissions from the source.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>, but the silencing\nduration is determined by a second Observable.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/throttle.png\" width=\"100%\" alt=\"throttle marble diagram\"></p>\n<p><code>throttle</code> emits the source Observable values on the output Observable\nwhen its internal timer is disabled, and ignores source values when the timer\nis enabled. Initially, the timer is disabled. As soon as the first source\nvalue arrives, it is forwarded to the output Observable, and then the timer\nis enabled by calling the <code>durationSelector</code> function with the source value,\nwhich returns the \"duration\" Observable. When the duration Observable emits a\nvalue or completes, the timer is disabled, and this process repeats for the\nnext source value.</p>\n<h2>Example</h2>\n<p>Emit clicks at a rate of at most one click per second</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { throttle } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(throttle(ev => interval(1000)));\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/audit\"><code>audit</code></a>\n</li>\n    <li><a href=\"api/operators/debounce\"><code>debounce</code></a>\n</li>\n    <li><a href=\"api/operators/delayWhen\"><code>delayWhen</code></a>\n</li>\n    <li><a href=\"api/operators/sample\"><code>sample</code></a>\n</li>\n    <li><a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/sample\n - api/operators/throttleTime\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/audit\n - api/operators/debounce\n - api/operators/delayWhen\n - api/operators/sample\n - api/operators/throttleTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/throttle.ts?message=docs(operators)%3A%20describe%20your%20change...#L21-L71\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/throttle.ts#L21-L71\n-->"
}