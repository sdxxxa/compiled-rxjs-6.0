{
  "id": "api/operators/publish",
  "title": "publish",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publish.ts?message=docs(operators)%3A%20describe%20your%20change...#L11-L67\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/publish.ts#L11-L67\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/publish\", \"name\": \"publish\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>publish</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\nbefore it begins emitting items to those Observers that have subscribed to it.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> publish&#x3C;T, R>(selector?: OperatorFunction&#x3C;T, R>): MonoTypeOperatorFunction&#x3C;T> | OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        Optional selector function which can use the multicasted source sequence as many times\nas needed, without causing multiple subscriptions to the source sequence.\nSubscribers to the given source will receive all notifications of the source from the time of the subscription on.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T> | OperatorFunction&#x3C;T, R></code>: A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Makes a cold Observable hot</span></p>\n<p><img src=\"/assets/images/marble-diagrams/publish.png\" width=\"100%\" alt=\"publish marble diagram\"></p>\n<h2>Examples</h2>\n<p>Make source$ hot by applying publish operator, then merge each inner observable into a single one\nand subscribe.</p>\n<code-example language=\"ts\">\nimport { of, zip, interval, merge } from \"rxjs\";\nimport { map, publish, tap } from \"rxjs/operators\";\n\nconst source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n  map(values => values[1])\n);\n\nsource$\n  .pipe(\n    publish(multicasted$ =>\n      merge(\n        multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n        multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n        multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n      )\n    )\n  )\n  .subscribe();\n\n// Results every two seconds\n// Stream 1: 1\n// Stream 2: 1\n// Stream 3: 1\n// ...\n// Stream 1: 9\n// Stream 2: 9\n// Stream 3: 9\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> publish(): UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> publish(selector: (shared: Observable&#x3C;T>) => O): OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(shared: Observable<t>) => O</t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> publish(selector: MonoTypeOperatorFunction&#x3C;T>): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>MonoTypeOperatorFunction<t></t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/publishLast\n - api/webSocket/webSocket\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publish.ts?message=docs(operators)%3A%20describe%20your%20change...#L11-L67\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/publish.ts#L11-L67\n-->"
}