{
  "id": "api/operators/windowToggle",
  "title": "windowToggle",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L62\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/windowToggle.ts#L10-L62\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/windowToggle\", \"name\": \"windowToggle\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>windowToggle</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Branch out the source Observable values as a nested Observable starting from\nan emission from <code>openings</code> and ending when the output of <code>closingSelector</code>\nemits.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> windowToggle&#x3C;T, O>(openings: Observable&#x3C;O>, closingSelector: (openValue: O) => Observable&#x3C;any>): OperatorFunction&#x3C;T, Observable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>openings</td>\n      \n      <td class=\"param-description\">\n      <p>        An observable of notifications to start new\nwindows.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>closingSelector</td>\n      \n      <td class=\"param-description\">\n      <p>        A function that takes\nthe value emitted by the <code>openings</code> observable and returns an Observable,\nwhich, when it emits (either <code>next</code> or <code>complete</code>), signals that the\nassociated window should complete.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Observable&#x3C;T>></code>: An observable of windows, which in turn\nare Observables.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>, but emits a nested\nObservable instead of an array.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/windowToggle.png\" width=\"100%\" alt=\"windowToggle marble diagram\"></p>\n<p>Returns an Observable that emits windows of items it collects from the source\nObservable. The output Observable emits windows that contain those items\nemitted by the source Observable between the time when the <code>openings</code>\nObservable emits an item and when the Observable returned by\n<code>closingSelector</code> emits an item.</p>\n<h2>Example</h2>\n<p>Every other second, emit the click events from the next 500ms</p>\n<code-example language=\"ts\">\nimport { fromEvent, interval, EMPTY } from 'rxjs';\nimport { windowToggle, mergeAll } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst openings = interval(1000);\nconst result = clicks.pipe(\n  windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n  mergeAll()\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/window\"><code>window</code></a>\n</li>\n    <li><a href=\"api/operators/windowCount\"><code>windowCount</code></a>\n</li>\n    <li><a href=\"api/operators/windowTime\"><code>windowTime</code></a>\n</li>\n    <li><a href=\"api/operators/windowWhen\"><code>windowWhen</code></a>\n</li>\n    <li><a href=\"api/operators/bufferToggle\"><code>bufferToggle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/bufferToggle\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowWhen\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/bufferToggle\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowTime\n - api/operators/windowWhen\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L10-L62\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/windowToggle.ts#L10-L62\n-->"
}