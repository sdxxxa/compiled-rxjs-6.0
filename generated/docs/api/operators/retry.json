{
  "id": "api/operators/retry",
  "title": "retry",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/retry.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L25\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/retry.ts#L6-L25\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/retry\", \"name\": \"retry\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>retry</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns an Observable that mirrors the source Observable with the exception of an <code>error</code>. If the source Observable\ncalls <code>error</code>, this method will resubscribe to the source Observable for a maximum of <code>count</code> resubscriptions (given\nas a number parameter) rather than propagating the <code>error</code> call.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> retry&#x3C;T>(count: number = -1): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>count</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>-1</code>.</p>\n        <p>Number of retry attempts before failing.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: The source Observable modified with the retry logic.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/retry.png\" width=\"100%\" alt=\"retry marble diagram\"></p>\n<p>Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\nduring failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\ntime and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\nwould be: [1, 2, 1, 2, 3, 4, 5, <code>complete</code>].</p>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/repeat\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/retry.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L25\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/retry.ts#L6-L25\n-->"
}