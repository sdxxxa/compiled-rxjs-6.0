{
  "id": "api/operators/distinctUntilChanged",
  "title": "distinctUntilChanged",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/distinctUntilChanged.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L66\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/distinctUntilChanged.ts#L9-L66\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/distinctUntilChanged\", \"name\": \"distinctUntilChanged\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>distinctUntilChanged</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> distinctUntilChanged&#x3C;T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>compare</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Optional comparison function called to test if an item is distinct from the previous item in the source.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(x: T) => K</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that emits items from the source Observable with distinct values.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p>If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.</p>\n<p>If a comparator function is not provided, an equality check is used by default.</p>\n<h2>Example</h2>\n<p>A simple example with numbers</p>\n<code-example language=\"ts\">\nimport { of } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\nof(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n    distinctUntilChanged(),\n  )\n  .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n</code-example>\n<p>An example using a compare function</p>\n<code-example language=\"typescript\">\nimport { of } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\ninterface Person {\n   age: number,\n   name: string\n}\n\nof&#x3C;Person>(\n    { age: 4, name: 'Foo'},\n    { age: 7, name: 'Bar'},\n    { age: 5, name: 'Foo'},\n    { age: 6, name: 'Foo'},\n  ).pipe(\n    distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n  )\n  .subscribe(x => console.log(x));\n\n// displays:\n// { age: 4, name: 'Foo' }\n// { age: 7, name: 'Bar' }\n// { age: 5, name: 'Foo' }\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/distinct\"><code>distinct</code></a>\n</li>\n    <li><a href=\"api/operators/distinctUntilKeyChanged\"><code>distinctUntilKeyChanged</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/distinct\n - api/operators/distinctUntilKeyChanged\n - api/operators/filter\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/distinct\n - api/operators/distinctUntilKeyChanged\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/distinctUntilChanged.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L66\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/distinctUntilChanged.ts#L9-L66\n-->"
}