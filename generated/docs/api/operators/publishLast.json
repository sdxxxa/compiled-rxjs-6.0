{
  "id": "api/operators/publishLast",
  "title": "publishLast",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publishLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L67\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/publishLast.ts#L6-L67\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/publishLast\", \"name\": \"publishLast\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>publishLast</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns a connectable observable sequence that shares a single subscription to the\nunderlying sequence containing only the last notification.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> publishLast&#x3C;T>(): UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code>: An observable sequence that contains the elements of a\nsequence produced by multicasting the source sequence.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/publishLast.png\" width=\"100%\" alt=\"publishLast marble diagram\"></p>\n<p>Similar to <a href=\"api/operators/publish\"><code>publish</code></a>, but it waits until the source observable completes and stores\nthe last emitted value.\nSimilarly to <a href=\"api/operators/publishReplay\"><code>publishReplay</code></a> and <a href=\"api/operators/publishBehavior\"><code>publishBehavior</code></a>, this keeps storing the last\nvalue even if it has no more subscribers. If subsequent subscriptions happen, they will\nimmediately get that last stored value and complete.</p>\n<h2>Example</h2>\n<code-example language=\"ts\">\nimport { interval } from 'rxjs';\nimport { publishLast, tap, take } from 'rxjs/operators';\n\nconst connectable =\n  interval(1000)\n    .pipe(\n      tap(x => console.log(\"side effect\", x)),\n      take(3),\n      publishLast());\n\nconnectable.subscribe(\n  x => console.log(  \"Sub. A\", x),\n  err => console.log(\"Sub. A Error\", err),\n  () => console.log( \"Sub. A Complete\"));\n\nconnectable.subscribe(\n  x => console.log(  \"Sub. B\", x),\n  err => console.log(\"Sub. B Error\", err),\n  () => console.log( \"Sub. B Complete\"));\n\nconnectable.connect();\n\n// Results:\n//    \"side effect 0\"\n//    \"side effect 1\"\n//    \"side effect 2\"\n//    \"Sub. A 2\"\n//    \"Sub. B 2\"\n//    \"Sub. A Complete\"\n//    \"Sub. B Complete\"\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/class/ConnectableObservable\"><code>ConnectableObservable</code></a>\n</li>\n    <li><a href=\"api/operators/publish\"><code>publish</code></a>\n</li>\n    <li><a href=\"api/operators/publishReplay\"><code>publishReplay</code></a>\n</li>\n    <li><a href=\"api/operators/publishBehavior\"><code>publishBehavior</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/ConnectableObservable\n - api/operators\n - api/operators/publish\n - api/operators/publishBehavior\n - api/operators/publishReplay\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/publishLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L6-L67\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/publishLast.ts#L6-L67\n-->"
}