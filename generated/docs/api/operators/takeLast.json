{
  "id": "api/operators/takeLast",
  "title": "takeLast",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L58\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/takeLast.ts#L7-L58\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/takeLast\", \"name\": \"takeLast\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>takeLast</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Emits only the last <code>count</code> values emitted by the source Observable.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> takeLast&#x3C;T>(count: number): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>count</td>\n      \n      <td class=\"param-description\">\n      <p>        The maximum number of values to emit from the end of\nthe sequence of values emitted by the source Observable.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that emits at most the last count\nvalues emitted by the source Observable.</p>\n\n\n\n\n\n<h4 class=\"no-anchor\">Throws</h4>\n\n<p><code>ArgumentOutOfRangeError</code> When using <code>takeLast(i)</code>, it delivers an\nArgumentOutOrRangeError to the Observer's <code>error</code> callback if <code>i &#x3C; 0</code>.</p>\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Remembers the latest <code>count</code> values, then emits those\nonly when the source completes.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/takeLast.png\" width=\"100%\" alt=\"takeLast marble diagram\"></p>\n<p><code>takeLast</code> returns an Observable that emits at most the last <code>count</code> values\nemitted by the source Observable. If the source emits fewer than <code>count</code>\nvalues then all of its values are emitted. This operator must wait until the\n<code>complete</code> notification emission from the source in order to emit the <code>next</code>\nvalues on the output Observable, because otherwise it is impossible to know\nwhether or not more values will be emitted on the source. For this reason,\nall values are emitted synchronously, followed by the complete notification.</p>\n<h2>Example</h2>\n<p>Take the last 3 values of an Observable with many values</p>\n<code-example language=\"ts\">\nimport { range } from 'rxjs';\nimport { takeLast } from 'rxjs/operators';\n\nconst many = range(1, 100);\nconst lastThree = many.pipe(takeLast(3));\nlastThree.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/take\"><code>take</code></a>\n</li>\n    <li><a href=\"api/operators/takeUntil\"><code>takeUntil</code></a>\n</li>\n    <li><a href=\"api/operators/takeWhile\"><code>takeWhile</code></a>\n</li>\n    <li><a href=\"api/operators/skip\"><code>skip</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/interface/ArgumentOutOfRangeError\n - api/operators\n - api/operators/take\n - api/operators/takeUntil\n - api/operators/takeWhile\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/skip\n - api/operators/take\n - api/operators/takeUntil\n - api/operators/takeWhile\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/takeLast.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L58\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/takeLast.ts#L7-L58\n-->"
}