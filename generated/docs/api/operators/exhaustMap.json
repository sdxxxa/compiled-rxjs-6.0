{
  "id": "api/operators/exhaustMap",
  "title": "exhaustMap",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/exhaustMap.ts?message=docs(operators)%3A%20describe%20your%20change...#L18-L79\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/exhaustMap.ts#L18-L79\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/exhaustMap\", \"name\": \"exhaustMap\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>exhaustMap</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Projects each source value to an Observable which is merged in the output\nObservable only if the previous projected Observable has completed.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> exhaustMap&#x3C;T, R, O extends ObservableInput&#x3C;any>>(project: (value: T, index: number) => O, resultSelector?: (outerValue: T, innerValue: ObservedValueOf&#x3C;O>, outerIndex: number, innerIndex: number) => R): OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O> | R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n      <p>        A function\nthat, when applied to an item emitted by the source Observable, returns an\nObservable.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(outerValue: T, innerValue: ObservedValueOf<o>, outerIndex: number, innerIndex: number) => R</o></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O> | R></code>: An Observable containing projected Observables\nof each item of the source, ignoring projected Observables that start before\ntheir preceding Observable has completed.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Maps each value to an Observable, then flattens all of\nthese inner Observables using <a href=\"api/operators/exhaust\"><code>exhaust</code></a>.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/exhaustMap.png\" width=\"100%\" alt=\"exhaustMap marble diagram\"></p>\n<p>Returns an Observable that emits items based on applying a function that you\nsupply to each item emitted by the source Observable, where that function\nreturns an (so-called \"inner\") Observable. When it projects a source value to\nan Observable, the output Observable begins emitting the items emitted by\nthat projected Observable. However, <code>exhaustMap</code> ignores every new projected\nObservable if the previous projected Observable has not yet completed. Once\nthat one completes, it will accept and flatten the next projected Observable\nand repeat this process.</p>\n<h2>Example</h2>\n<p>Run a finite timer for each click, only if there is no currently active timer</p>\n<code-example language=\"ts\">\nimport { fromEvent, interval } from 'rxjs';\nimport { exhaustMap, take } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(\n  exhaustMap(ev => interval(1000).pipe(take(5)))\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> exhaustMap(project: (value: T, index: number) => O): OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T, index: number) => O</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> exhaustMap(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T, index: number) => O</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>undefined</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> exhaustMap(project: (value: T, index: number) => ObservableInput&#x3C;I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>project</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T, index: number) => ObservableInput<i></i></code><i>.</i></p><i>\n        \n      </i></td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>resultSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/concatMap\"><code>concatMap</code></a>\n</li>\n    <li><a href=\"api/operators/exhaust\"><code>exhaust</code></a>\n</li>\n    <li><a href=\"api/operators/mergeMap\"><code>mergeMap</code></a>\n</li>\n    <li><a href=\"api/operators/switchMap\"><code>switchMap</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/concatMap\n - api/operators/exhaust\n - api/operators/flatMap\n - api/operators/mergeMap\n - api/operators/switchMap\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/concatMap\n - api/operators/exhaust\n - api/operators/mergeMap\n - api/operators/switchMap\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/exhaustMap.ts?message=docs(operators)%3A%20describe%20your%20change...#L18-L79\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/exhaustMap.ts#L18-L79\n-->"
}