{
  "id": "api/operators/debounceTime",
  "title": "debounceTime",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounceTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L62\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/debounceTime.ts#L7-L62\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/debounceTime\", \"name\": \"debounceTime\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>debounceTime</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Emits a value from the source Observable only after a particular time span\nhas passed without another source emission.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> debounceTime&#x3C;T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>dueTime</td>\n      \n      <td class=\"param-description\">\n      <p>        The timeout duration in milliseconds (or the time\nunit determined internally by the optional <code>scheduler</code>) for the window of\ntime required to wait for emission silence before emitting the most recent\nsource value.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>async</code>.</p>\n<p>        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for\nmanaging the timers that handle the timeout for each value.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that delays the emissions of the source\nObservable by the specified <code>dueTime</code>, and may drop some values if they occur\ntoo frequently.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/delay\"><code>delay</code></a>, but passes only the most\nrecent value from each burst of emissions.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/debounceTime.png\" width=\"100%\" alt=\"debounceTime marble diagram\"></p>\n<p><code>debounceTime</code> delays values emitted by the source Observable, but drops\nprevious pending delayed emissions if a new value arrives on the source\nObservable. This operator keeps track of the most recent value from the\nsource Observable, and emits that only when <code>dueTime</code> enough time has passed\nwithout any other value appearing on the source Observable. If a new value\nappears before <code>dueTime</code> silence occurs, the previous value will be dropped\nand will not be emitted on the output Observable.</p>\n<p>This is a rate-limiting operator, because it is impossible for more than one\nvalue to be emitted in any time window of duration <code>dueTime</code>, but it is also\na delay-like operator since output emissions do not occur at the same time as\nthey did on the source Observable. Optionally takes a <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> for\nmanaging timers.</p>\n<h2>Example</h2>\n<p>Emit the most recent click after a burst of clicks</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(debounceTime(1000));\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/auditTime\"><code>auditTime</code></a>\n</li>\n    <li><a href=\"api/operators/debounce\"><code>debounce</code></a>\n</li>\n    <li><a href=\"api/operators/delay\"><code>delay</code></a>\n</li>\n    <li><a href=\"api/operators/sampleTime\"><code>sampleTime</code></a>\n</li>\n    <li><a href=\"api/operators/throttleTime\"><code>throttleTime</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/auditTime\n - api/operators/debounce\n - api/operators/delay\n - api/operators/sampleTime\n - api/operators/throttleTime\n-->\n<!-- links from this doc:\n - /api\n - api/index/interface/SchedulerLike\n - api/operators\n - api/operators/auditTime\n - api/operators/debounce\n - api/operators/delay\n - api/operators/sampleTime\n - api/operators/throttleTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/debounceTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L62\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/debounceTime.ts#L7-L62\n-->"
}