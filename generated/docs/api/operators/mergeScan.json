{
  "id": "api/operators/mergeScan",
  "title": "mergeScan",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L53\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/mergeScan.ts#L9-L53\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/mergeScan\", \"name\": \"mergeScan\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>mergeScan</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Applies an accumulator function over the source Observable where the\naccumulator function itself returns an Observable, then each intermediate\nObservable returned is merged into the output Observable.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> mergeScan&#x3C;T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput&#x3C;R>, seed: R, concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n              <p>The accumulator function called on each source value.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n              <p>The initial accumulation value.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>concurrent</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>Number.POSITIVE_INFINITY</code>.</p>\n<p>        Maximum number of\ninput Observables being subscribed to concurrently.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code>: An observable of the accumulated values.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/scan\"><code>scan</code></a>, but the Observables returned\nby the accumulator are merged into the outer Observable.</span></p>\n<h2>Example</h2>\n<p>Count the number of click events</p>\n<code-example language=\"ts\">\nimport { fromEvent, of } from 'rxjs';\nimport { mapTo, mergeScan } from 'rxjs/operators';\n\nconst click$ = fromEvent(document, 'click');\nconst one$ = click$.pipe(mapTo(1));\nconst seed = 0;\nconst count$ = one$.pipe(\n  mergeScan((acc, one) => of(acc + one), seed),\n);\ncount$.subscribe(x => console.log(x));\n\n// Results:\n// 1\n// 2\n// 3\n// 4\n// ...and so on for each click\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/function/merge\n - api/operators\n - api/operators/expand\n - api/operators/flatMap\n - api/operators/mergeAll\n - api/operators/mergeMap\n - api/operators/mergeMapTo\n - api/operators/reduce\n - api/operators/scan\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/scan\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/mergeScan.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L53\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/mergeScan.ts#L9-L53\n-->"
}