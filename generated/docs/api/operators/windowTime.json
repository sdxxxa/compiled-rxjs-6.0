{
  "id": "api/operators/windowTime",
  "title": "windowTime",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L102-L127\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/windowTime.ts#L102-L127\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/windowTime\", \"name\": \"windowTime\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>windowTime</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> windowTime&#x3C;T>(windowTimeSpan: number): OperatorFunction&#x3C;T, Observable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Observable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n\n\n  \n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> windowTime(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction&#x3C;T, Observable&#x3C;T>></code-example>\n\n\n<div class=\"short-description\">\n  <p>Branch out the source Observable values as a nested Observable periodically\nin time.</p>\n\n</div>\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>The amount of time to fill each window.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        The scheduler on which to schedule the\nintervals that determine window boundaries.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Observable&#x3C;T>></code>: An observable of windows, which in turn\nare Observables.</p>\n\n\n\n\n\n\n<div class=\"description\">\n  <p><span class=\"informal\">It's like <a href=\"api/operators/bufferTime\"><code>bufferTime</code></a>, but emits a nested\nObservable instead of an array.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/windowTime.png\" width=\"100%\" alt=\"windowTime marble diagram\"></p>\n<p>Returns an Observable that emits windows of items it collects from the source\nObservable. The output Observable starts a new window periodically, as\ndetermined by the <code>windowCreationInterval</code> argument. It emits each window\nafter a fixed timespan, specified by the <code>windowTimeSpan</code> argument. When the\nsource Observable completes or encounters an error, the output Observable\nemits the current window and propagates the notification from the source\nObservable. If <code>windowCreationInterval</code> is not provided, the output\nObservable starts a new window when the previous window of duration\n<code>windowTimeSpan</code> completes. If <code>maxWindowCount</code> is provided, each window\nwill emit at most fixed number of values. Window will complete immediately\nafter emitting last value and next one still will open as specified by\n<code>windowTimeSpan</code> and <code>windowCreationInterval</code> arguments.</p>\n<h2>Examples</h2>\n<p>In every window of 1 second each, emit at most 2 click events</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { windowTime, map, mergeAll, take } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(\n  windowTime(1000),\n  map(win => win.pipe(take(2))), // each window has at most 2 emissions\n  mergeAll(),                    // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { windowTime, map, mergeAll, take } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(\n  windowTime(1000, 5000),\n  map(win => win.pipe(take(2))), // each window has at most 2 emissions\n  mergeAll(),                    // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n<p>Same as example above but with maxWindowCount instead of take</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { windowTime, mergeAll } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst result = clicks.pipe(\n  windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n  mergeAll(),                // flatten the Observable-of-Observables\n);\nresult.subscribe(x => console.log(x));\n</code-example>\n\n</div>\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> windowTime(windowTimeSpan: number, windowCreationInterval: number, scheduler?: SchedulerLike): OperatorFunction&#x3C;T, Observable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowCreationInterval</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Observable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> windowTime(windowTimeSpan: number, windowCreationInterval: number, maxWindowSize: number, scheduler?: SchedulerLike): OperatorFunction&#x3C;T, Observable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowTimeSpan</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>windowCreationInterval</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>maxWindowSize</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>number</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, Observable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/bufferTime\n - api/operators/window\n - api/operators/windowCount\n - api/operators/windowToggle\n - api/operators/windowWhen\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/bufferTime\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/windowTime.ts?message=docs(operators)%3A%20describe%20your%20change...#L102-L127\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/windowTime.ts#L102-L127\n-->"
}