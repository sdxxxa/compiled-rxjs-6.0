{
  "id": "api/operators/delay",
  "title": "delay",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/delay.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L65\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/delay.ts#L9-L65\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/delay\", \"name\": \"delay\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>delay</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Delays the emission of items from the source Observable by a given timeout or\nuntil a given Date.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> delay&#x3C;T>(delay: number | Date, scheduler: SchedulerLike = async): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>delay</td>\n      \n      <td class=\"param-description\">\n      <p>        The delay duration in milliseconds (a <code>number</code>) or\na <code>Date</code> until which the emission of the source items is delayed.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>async</code>.</p>\n<p>        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for\nmanaging the timers that handle the time-shift for each item.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that delays the emissions of the source\nObservable by the specified timeout or Date.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Time shifts each item by some specified amount of\nmilliseconds.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/delay.png\" width=\"100%\" alt=\"delay marble diagram\"></p>\n<p>If the delay argument is a Number, this operator time shifts the source\nObservable by that amount of time expressed in milliseconds. The relative\ntime intervals between the values are preserved.</p>\n<p>If the delay argument is a Date, this operator time shifts the start of the\nObservable execution until the given date occurs.</p>\n<h2>Examples</h2>\n<p>Delay each click by one second</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\ndelayedClicks.subscribe(x => console.log(x));\n</code-example>\n<p>Delay all clicks until a future date happens</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst date = new Date('March 15, 2050 12:00:00'); // in the future\nconst delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\ndelayedClicks.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/debounceTime\"><code>debounceTime</code></a>\n</li>\n    <li><a href=\"api/operators/delayWhen\"><code>delayWhen</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/function/interval\n - api/index/function/timer\n - api/operators\n - api/operators/auditTime\n - api/operators/debounceTime\n - api/operators/delayWhen\n - api/operators/observeOn\n - api/operators/sampleTime\n - api/operators/throttleTime\n-->\n<!-- links from this doc:\n - /api\n - api/index/interface/SchedulerLike\n - api/operators\n - api/operators/debounceTime\n - api/operators/delayWhen\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/delay.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L65\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/delay.ts#L9-L65\n-->"
}