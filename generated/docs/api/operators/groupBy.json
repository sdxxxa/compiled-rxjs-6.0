{
  "id": "api/operators/groupBy",
  "title": "groupBy",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/groupBy.ts?message=docs(operators)%3A%20describe%20your%20change...#L13-L111\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/groupBy.ts#L13-L111\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/groupBy\", \"name\": \"groupBy\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>groupBy</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Groups the items emitted by an Observable according to a specified criterion,\nand emits these grouped items as <code>GroupedObservables</code>, one\n<a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> per group.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> groupBy&#x3C;T, K, R>(keySelector: (value: T) => K, elementSelector?: ((value: T) => R) | void, durationSelector?: (grouped: GroupedObservable&#x3C;K, R>) => Observable&#x3C;any>, subjectSelector?: () => Subject&#x3C;R>): OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n      <p>        A function that extracts the key\nfor each item.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>elementSelector</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        A function that extracts the\nreturn element for each item.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        A function that returns an Observable to determine how long each group should\nexist.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subjectSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>() => Subject<r></r></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code>: An Observable that emits\nGroupedObservables, each of which corresponds to a unique key value and each\nof which emits those items from the source Observable that share that key\nvalue.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/groupBy.png\" width=\"100%\" alt=\"groupBy marble diagram\"></p>\n<p>When the Observable emits an item, a key is computed for this item with the keySelector function.</p>\n<p>If a <a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> for this key exists, this <a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> emits. Elsewhere, a new\n<a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> for this key is created and emits.</p>\n<p>A <a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> represents values belonging to the same group represented by a common key. The common\nkey is available as the key field of a <a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a> instance.</p>\n<p>The elements emitted by <a href=\"api/index/class/GroupedObservable\"><code>GroupedObservable</code></a>s are by default the items emitted by the Observable, or elements\nreturned by the elementSelector function.</p>\n<h2>Examples</h2>\n<h3>Group objects by id and return as array</h3>\n<code-example language=\"ts\">\nimport { of } from 'rxjs';\nimport { mergeMap, groupBy, reduce } from 'rxjs/operators';\n\nof(\n  {id: 1, name: 'JavaScript'},\n  {id: 2, name: 'Parcel'},\n  {id: 2, name: 'webpack'},\n  {id: 1, name: 'TypeScript'},\n  {id: 3, name: 'TSLint'}\n).pipe(\n  groupBy(p => p.id),\n  mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n)\n.subscribe(p => console.log(p));\n\n// displays:\n// [ { id: 1, name: 'JavaScript'},\n//   { id: 1, name: 'TypeScript'} ]\n//\n// [ { id: 2, name: 'Parcel'},\n//   { id: 2, name: 'webpack'} ]\n//\n// [ { id: 3, name: 'TSLint'} ]\n</code-example>\n<h3>Pivot data on the id field</h3>\n<code-example language=\"ts\">\nimport { of } from 'rxjs';\nimport { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n\nof(\n  { id: 1, name: 'JavaScript' },\n  { id: 2, name: 'Parcel' },\n  { id: 2, name: 'webpack' },\n  { id: 1, name: 'TypeScript' },\n  { id: 3, name: 'TSLint' }\n)\n  .pipe(\n    groupBy(p => p.id, p => p.name),\n    mergeMap(group$ =>\n      group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n    ),\n    map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n )\n .subscribe(p => console.log(p));\n\n// displays:\n// { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n// { id: 2, values: [ 'Parcel', 'webpack' ] }\n// { id: 3, values: [ 'TSLint' ] }\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> groupBy(keySelector: (value: T) => K): OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T) => K</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> groupBy(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable&#x3C;K, T>) => Observable&#x3C;any>): OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T) => K</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>elementSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>void</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(grouped: GroupedObservable<k, t=\"\">) => Observable<any></any></k,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> groupBy(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable&#x3C;K, R>) => Observable&#x3C;any>): OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T) => K</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>elementSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(value: T) => R</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(grouped: GroupedObservable<k, r=\"\">) => Observable<any></any></k,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> groupBy(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable&#x3C;K, R>) => Observable&#x3C;any>, subjectSelector?: () => Subject&#x3C;R>): OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>keySelector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T) => K</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>elementSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(value: T) => R</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>durationSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(grouped: GroupedObservable<k, r=\"\">) => Observable<any></any></k,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subjectSelector</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>() => Subject<r></r></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, GroupedObservable&#x3C;K, R>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n-->\n<!-- links from this doc:\n - /api\n - api/index/class/GroupedObservable\n - api/operators\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/groupBy.ts?message=docs(operators)%3A%20describe%20your%20change...#L13-L111\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/groupBy.ts#L13-L111\n-->"
}