{
  "id": "api/operators/single",
  "title": "single",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L53\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/single.ts#L7-L53\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/single\", \"name\": \"single\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>single</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns an Observable that emits the single item emitted by the source Observable that matches a specified\npredicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\nitems, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\nemits items but none match the specified predicate then <code>undefined</code> is emitted.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> single&#x3C;T>(predicate?: (value: T, index: number, source: Observable&#x3C;T>) => boolean): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>A predicate function to evaluate items emitted by the source Observable.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code>: An Observable that emits the single item emitted by the source Observable that matches\nthe predicate or <code>undefined</code> when no items match.</p>\n\n\n\n\n\n<h4 class=\"no-anchor\">Throws</h4>\n\n<p><code>EmptyError</code> Delivers an EmptyError to the Observer's <code>error</code>\ncallback if the Observable completes before any <code>next</code> notification was sent.</p>\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Like <a href=\"api/operators/first\"><code>first</code></a>, but emit with error notification if there is more than one value.</span>\n<img src=\"/assets/images/marble-diagrams/single.png\" width=\"100%\" alt=\"single marble diagram\"></p>\n<h2>Example</h2>\n<p>emits 'error'</p>\n<code-example language=\"ts\">\nimport { range } from 'rxjs';\nimport { single } from 'rxjs/operators';\n\nconst numbers = range(1,5).pipe(single());\nnumbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n// result\n// 'error'\n</code-example>\n<p>emits 'undefined'</p>\n<code-example language=\"ts\">\nimport { range } from 'rxjs';\nimport { single } from 'rxjs/operators';\n\nconst numbers = range(1,5).pipe(single(x => x === 10));\nnumbers.subscribe(x => console.log(x));\n// result\n// 'undefined'\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/first\"><code>first</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index/interface/EmptyError\n - api/operators\n - api/operators/elementAt\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/first\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/single.ts?message=docs(operators)%3A%20describe%20your%20change...#L7-L53\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/single.ts#L7-L53\n-->"
}