{
  "id": "api/operators/partition",
  "title": "partition",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/partition.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L59\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/partition.ts#L5-L59\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/partition\", \"name\": \"partition\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>partition</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Splits the source Observable into two, one with values that satisfy a\npredicate, and another with values that don't satisfy the predicate.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> partition&#x3C;T>(predicate: (value: T, index: number) => boolean, thisArg?: any): UnaryFunction&#x3C;Observable&#x3C;T>, [Observable&#x3C;T>, Observable&#x3C;T>]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>predicate</td>\n      \n      <td class=\"param-description\">\n      <p>        A function that\nevaluates each value emitted by the source Observable. If it returns <code>true</code>,\nthe value is emitted on the first Observable in the returned array, if\n<code>false</code> the value is emitted on the second Observable in the array. The\n<code>index</code> parameter is the number <code>i</code> for the i-th source emission that has\nhappened since the subscription, starting from the number <code>0</code>.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>thisArg</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        An optional argument to determine the value of <code>this</code>\nin the <code>predicate</code> function.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, [Observable&#x3C;T>, Observable&#x3C;T>]></code>: An array with two Observables: one\nwith values that passed the predicate, and another with values that did not\npass the predicate.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">It's like <a href=\"api/operators/filter\"><code>filter</code></a>, but returns two Observables:\none like the output of <a href=\"api/operators/filter\"><code>filter</code></a>, and the other with values that did not\npass the condition.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/partition.png\" width=\"100%\" alt=\"partition marble diagram\"></p>\n<p><code>partition</code> outputs an array with two Observables that partition the values\nfrom the source Observable through the given <code>predicate</code> function. The first\nObservable in that array emits source values for which the predicate argument\nreturns true. The second Observable emits source values for which the\npredicate returns false. The first behaves like <a href=\"api/operators/filter\"><code>filter</code></a> and the second\nbehaves like <a href=\"api/operators/filter\"><code>filter</code></a> with the predicate negated.</p>\n<h2>Example</h2>\n<p>Partition click events into those on DIV elements and those elsewhere</p>\n<code-example language=\"ts\">\nimport { fromEvent } from 'rxjs';\nimport { partition } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\nconst clicksOnDivs = parts[0];\nconst clicksElsewhere = parts[1];\nclicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\nclicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/filter\"><code>filter</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/filter\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/filter\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/partition.ts?message=docs(operators)%3A%20describe%20your%20change...#L5-L59\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/partition.ts#L5-L59\n-->"
}