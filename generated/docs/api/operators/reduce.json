{
  "id": "api/operators/reduce",
  "title": "reduce",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/reduce.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L82\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/reduce.ts#L12-L82\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/reduce\", \"name\": \"reduce\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>reduce</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Applies an accumulator function over the source Observable, and returns the\naccumulated result when the source completes, given an optional seed value.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> reduce&#x3C;T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n      <p>        The accumulator function\ncalled on each source value.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>The initial accumulation value.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code>: An Observable that emits a single value that is the\nresult of accumulating the values emitted by the source Observable.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Combines together all values emitted on the source,\nusing an accumulator function that knows how to join a new source value into\nthe accumulation from the past.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/reduce.png\" width=\"100%\" alt=\"reduce marble diagram\"></p>\n<p>Like\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">Array.prototype.reduce()</a>,\n<code>reduce</code> applies an <code>accumulator</code> function against an accumulation and each\nvalue of the source Observable (from the past) to reduce it to a single\nvalue, emitted on the output Observable. Note that <code>reduce</code> will only emit\none value, only when the source Observable completes. It is equivalent to\napplying operator <a href=\"api/operators/scan\"><code>scan</code></a> followed by operator <a href=\"api/operators/last\"><code>last</code></a>.</p>\n<p>Returns an Observable that applies a specified <code>accumulator</code> function to each\nitem emitted by the source Observable. If a <code>seed</code> value is specified, then\nthat value will be used as the initial value for the accumulator. If no seed\nvalue is specified, the first item of the source is used as the seed.</p>\n<h2>Example</h2>\n<p>Count the number of click events that happened in 5 seconds</p>\n<code-example language=\"ts\">\nimport { fromEvent, interval } from 'rxjs';\nimport { reduce, takeUntil, mapTo } from 'rxjs/operators';\n\nconst clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n  takeUntil(interval(5000)),\n);\nconst ones = clicksInFiveSeconds.pipe(mapTo(1));\nconst seed = 0;\nconst count = ones.pipe(reduce((acc, one) => acc + one, seed));\ncount.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> reduce(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(acc: T, value: T, index: number) => T</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>T</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>MonoTypeOperatorFunction&#x3C;T></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> reduce(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction&#x3C;T, T[]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(acc: T[], value: T, index: number) => T[]</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>T[]</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, T[]></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> reduce(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>accumulator</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(acc: R, value: T, index: number) => R</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>seed</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>R</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/count\"><code>count</code></a>\n</li>\n    <li><a href=\"api/operators/expand\"><code>expand</code></a>\n</li>\n    <li><a href=\"api/operators/mergeScan\"><code>mergeScan</code></a>\n</li>\n    <li><a href=\"api/operators/scan\"><code>scan</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/count\n - api/operators/scan\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/count\n - api/operators/expand\n - api/operators/last\n - api/operators/mergeScan\n - api/operators/scan\n - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/reduce.ts?message=docs(operators)%3A%20describe%20your%20change...#L12-L82\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/reduce.ts#L12-L82\n-->"
}