{
  "id": "api/operators/multicast",
  "title": "multicast",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/multicast.ts?message=docs(operators)%3A%20describe%20your%20change...#L13-L56\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/multicast.ts#L13-L56\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/multicast\", \"name\": \"multicast\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>multicast</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Returns an Observable that emits the results of invoking a specified selector on items\nemitted by a ConnectableObservable that shares a single subscription to the underlying stream.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> multicast&#x3C;T, R>(subjectOrSubjectFactory: Subject&#x3C;T> | (() => Subject&#x3C;T>), selector?: (source: Observable&#x3C;T>) => Observable&#x3C;R>): OperatorFunction&#x3C;T, R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subjectOrSubjectFactory</td>\n      \n      <td class=\"param-description\">\n      <p>        Factory function to create an intermediate subject through\nwhich the source sequence's elements will be multicast to the selector function\nor Subject to push source elements into.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        Optional selector function that can use the multicasted source stream\nas many times as needed, without causing multiple subscriptions to the source stream.\nSubscribers to the given source will receive all notifications of the source from the\ntime of the subscription forward.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, R></code>: An Observable that emits the results of invoking the selector\non the items emitted by a <code>ConnectableObservable</code> that shares a single subscription to\nthe underlying stream.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><img src=\"/assets/images/marble-diagrams/multicast.png\" width=\"100%\" alt=\"multicast marble diagram\"></p>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> multicast(subject: Subject&#x3C;T>): UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subject</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>Subject<t></t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> multicast(subject: Subject&#x3C;T>, selector: (shared: Observable&#x3C;T>) => O): UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;ObservedValueOf&#x3C;O>>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subject</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>Subject<t></t></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(shared: Observable<t>) => O</t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;ObservedValueOf&#x3C;O>>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> multicast(subjectFactory: (this: Observable&#x3C;T>) => Subject&#x3C;T>): UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subjectFactory</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(this: Observable<t>) => Subject<t></t></t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>UnaryFunction&#x3C;Observable&#x3C;T>, ConnectableObservable&#x3C;T>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> multicast(SubjectFactory: (this: Observable&#x3C;T>) => Subject&#x3C;T>, selector: (shared: Observable&#x3C;T>) => O): OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>SubjectFactory</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(this: Observable<t>) => Subject<t></t></t></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>selector</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(shared: Observable<t>) => O</t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, ObservedValueOf&#x3C;O>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/multicast.ts?message=docs(operators)%3A%20describe%20your%20change...#L13-L56\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/multicast.ts#L13-L56\n-->"
}