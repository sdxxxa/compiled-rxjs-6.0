{
  "id": "api/operators/bufferToggle",
  "title": "bufferToggle",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L63\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/bufferToggle.ts#L9-L63\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/operators\", \"name\": \"rxjs/operators\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/operators/bufferToggle\", \"name\": \"bufferToggle\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/operators\">rxjs/operators</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>bufferToggle</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Buffers the source Observable values starting from an emission from\n<code>openings</code> and ending when the output of <code>closingSelector</code> emits.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> bufferToggle&#x3C;T, O>(openings: SubscribableOrPromise&#x3C;O>, closingSelector: (value: O) => SubscribableOrPromise&#x3C;any>): OperatorFunction&#x3C;T, T[]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>openings</td>\n      \n      <td class=\"param-description\">\n      <p>        A Subscribable or Promise of notifications to start new\nbuffers.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>closingSelector</td>\n      \n      <td class=\"param-description\">\n      <p>        A function that takes\nthe value emitted by the <code>openings</code> observable and returns a Subscribable or Promise,\nwhich, when it emits, signals that the associated buffer should be emitted\nand cleared.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>OperatorFunction&#x3C;T, T[]></code>: An observable of arrays of buffered values.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Collects values from the past as an array. Starts\ncollecting only when <code>opening</code> emits, and calls the <code>closingSelector</code>\nfunction to get an Observable that tells when to close the buffer.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/bufferToggle.png\" width=\"100%\" alt=\"bufferToggle marble diagram\"></p>\n<p>Buffers values from the source by opening the buffer via signals from an\nObservable provided to <code>openings</code>, and closing and sending the buffers when\na Subscribable or Promise returned by the <code>closingSelector</code> function emits.</p>\n<h2>Example</h2>\n<p>Every other second, emit the click events from the next 500ms</p>\n<code-example language=\"ts\">\nimport { fromEvent, interval, EMPTY } from 'rxjs';\nimport { bufferToggle } from 'rxjs/operators';\n\nconst clicks = fromEvent(document, 'click');\nconst openings = interval(1000);\nconst buffered = clicks.pipe(bufferToggle(openings, i =>\n  i % 2 ? interval(500) : EMPTY\n));\nbuffered.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/buffer\"><code>buffer</code></a>\n</li>\n    <li><a href=\"api/operators/bufferCount\"><code>bufferCount</code></a>\n</li>\n    <li><a href=\"api/operators/bufferTime\"><code>bufferTime</code></a>\n</li>\n    <li><a href=\"api/operators/bufferWhen\"><code>bufferWhen</code></a>\n</li>\n    <li><a href=\"api/operators/windowToggle\"><code>windowToggle</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/operators\n - api/operators/buffer\n - api/operators/bufferCount\n - api/operators/bufferTime\n - api/operators/bufferWhen\n - api/operators/windowToggle\n-->\n<!-- links from this doc:\n - /api\n - api/operators\n - api/operators/buffer\n - api/operators/bufferCount\n - api/operators/bufferTime\n - api/operators/bufferWhen\n - api/operators/windowToggle\n - https://github.com/reactivex/rxjs/edit/master/src/internal/operators/bufferToggle.ts?message=docs(operators)%3A%20describe%20your%20change...#L9-L63\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/operators/bufferToggle.ts#L9-L63\n-->"
}