{
  "id": "api/index/class/Observable",
  "title": "Observable",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/Observable.ts?message=docs(index)%3A%20describe%20your%20change...#L12-L363\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/Observable.ts#L12-L363\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/class/Observable\", \"name\": \"Observable\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>Observable</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>A representation of any set of values over any amount of time. This is the most basic building block\nof RxJS.</p>\n<p></p>\n  \n  \n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass Observable&#x3C;T> implements <a class=\"code-anchor\" href=\"api/index/interface/Subscribable\">Subscribable<t></t></a> {\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#create\">static create: Function</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#if\">static if: typeof iif</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#throw\">static throw: typeof throwError</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#constructor()\">constructor(subscribe?: (this: Observable&#x3C;T>, subscriber: Subscriber&#x3C;T>) => TeardownLogic)</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#_isScalar\">_isScalar: boolean</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#source\">source: Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#operator\">operator: Operator&#x3C;any, T></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#lift\">lift&#x3C;R>(operator: Operator&#x3C;T, R>): Observable&#x3C;R></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#subscribe\">subscribe(observerOrNext?: PartialObserver&#x3C;T> | ((value: T) => void), error?: (error: any) => void, complete?: () => void): Subscription</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#_trySubscribe\">_trySubscribe(sink: Subscriber&#x3C;T>): TeardownLogic</a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#forEach\">forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise&#x3C;void></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#pipe\">pipe(...operations: OperatorFunction&#x3C;any, any>[]): Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/index/class/Observable#toPromise\">toPromise(promiseCtor?: PromiseConstructorLike): Promise&#x3C;T></a>\n}\n</code-example>\n\n  \n  \n  <div class=\"descendants class\">\n    <h2>Subclasses</h2>\n    \n\n<ul>\n  \n    <li>\n      <code>ConnectableObservable</code>\n      \n\n\n    </li>\n  \n    <li>\n      <code>GroupedObservable</code>\n      \n\n\n    </li>\n  \n    <li>\n      <code>Subject</code>\n      \n\n<ul>\n  \n    <li>\n      <code>BehaviorSubject</code>\n      \n\n\n    </li>\n  \n    <li>\n      <code>ReplaySubject</code>\n      \n\n\n    </li>\n  \n    <li>\n      <code>AsyncSubject</code>\n      \n\n\n    </li>\n  \n</ul>\n\n\n    </li>\n  \n</ul>\n\n\n  </div>\n  \n\n</section>\n\n\n  \n  \n  \n  \n<section class=\"static-properties\">\n  <h2>Static Properties</h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"static-property\">\n        <td><a id=\"create\"></a>create</td>\n        <td><label class=\"property-type-label\"><code>Function</code></label></td>\n        <td>\n          <p>Creates a new cold Observable by calling the Observable constructor</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"static-property\">\n        <td><a id=\"if\"></a>if</td>\n        <td><label class=\"property-type-label\"><code>typeof iif</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"static-property\">\n        <td><a id=\"throw\"></a>throw</td>\n        <td><label class=\"property-type-label\"><code>typeof throwError</code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n  \n\n  \n  <h2>Constructor</h2>\n  <a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(subscribe?: (this: Observable&#x3C;T>, subscriber: Subscriber&#x3C;T>) => TeardownLogic)</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>subscribe</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        the function that is called when the Observable is\ninitially subscribed to. This function is given a Subscriber, to which new values\ncan be <code>next</code>ed, or an <code>error</code> method can be called to raise an error, or\n<code>complete</code> can be called to notify of a successful completion.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n\n  \n<section class=\"instance-properties\">\n  <h2>Properties</h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"_isScalar\"></a>_isScalar</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p>Internal implementation detail, do not use directly.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"source\"></a>source</td>\n        <td><label class=\"property-type-label\"><code>Observable&#x3C;any></code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"operator\"></a>operator</td>\n        <td><label class=\"property-type-label\"><code>Operator&#x3C;any, T></code></label></td>\n        <td>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n<section class=\"instance-methods\">\n  <h2>Methods</h2>\n  \n    <a id=\"lift\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    lift()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Creates a new Observable, with this Observable as the source, and the passed\noperator defined as the new observable's operator.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">lift&#x3C;R>(operator: Operator&#x3C;T, R>): Observable&#x3C;R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>operator</td>\n      \n      <td class=\"param-description\">\n              <p>the operator defining the operation to take on the observable</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;R></code>: a new observable with the Operator applied</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"subscribe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    subscribe()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.</p>\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\">5 overloads...</h4></summary>\n          <div class=\"detail-contents\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(observer?: PartialObserver&#x3C;T>): Subscription</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>observer</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>PartialObserver<t></t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Subscription</code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>null | undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>null | undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>complete</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>() => void</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Subscription</code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>null | undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(error: any) => void</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>complete</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>() => void</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Subscription</code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(value: T) => void</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>null | undefined</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>complete</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>() => void</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Subscription</code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(value: T) => void</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>error</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>(error: any) => void</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>complete</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>() => void</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Subscription</code></p>\n\n\n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p><span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span></p>\n<p><code>subscribe</code> is not a regular operator, but a method that calls Observable's internal <code>subscribe</code> function. It\nmight be for example a function that you passed to Observable's constructor, but most of the time it is\na library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\nthat calling <code>subscribe</code> is actually the moment when Observable starts its work, not when it is created, as it is often\nthe thought.</p>\n<p>Apart from starting the execution of an Observable, this method allows you to listen for values\nthat an Observable emits, as well as for when it completes or errors. You can achieve this in two\nof the following ways.</p>\n<p>The first way is creating an object that implements <a href=\"api/index/interface/Observer\"><code>Observer</code></a> interface. It should have methods\ndefined by that interface, but note that it should be just a regular JavaScript object, which you can create\nyourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\nnot attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\nthat your object does not have to implement all methods. If you find yourself creating a method that doesn't\ndo anything, you can simply omit it. Note however, if the <code>error</code> method is not provided, all errors will\nbe left uncaught.</p>\n<p>The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\nThis means you can provide three functions as arguments to <code>subscribe</code>, where the first function is equivalent\nof a <code>next</code> method, the second of an <code>error</code> method and the third of a <code>complete</code> method. Just as in case of Observer,\nif you do not need to listen for something, you can omit a function, preferably by passing <code>undefined</code> or <code>null</code>,\nsince <code>subscribe</code> recognizes these functions by where they were placed in function call. When it comes\nto <code>error</code> function, just as before, if not provided, errors emitted by an Observable will be thrown.</p>\n<p>Whichever style of calling <code>subscribe</code> you use, in both cases it returns a Subscription object.\nThis object allows you to call <code>unsubscribe</code> on it, which in turn will stop the work that an Observable does and will clean\nup all resources that an Observable used. Note that cancelling a subscription will not call <code>complete</code> callback\nprovided to <code>subscribe</code> function, which is reserved for a regular completion signal that comes from an Observable.</p>\n<p>Remember that callbacks provided to <code>subscribe</code> are not guaranteed to be called asynchronously.\nIt is an Observable itself that decides when these functions will be called. For example <a href=\"api/index/function/of\"><code>of</code></a>\nby default emits all its values synchronously. Always check documentation for how given Observable\nwill behave when subscribed and if its default behavior can be modified with a <code>scheduler</code>.</p>\n<h2>Example</h2>\n<h3>Subscribe with an Observer</h3>\n<code-example language=\"ts\">\nimport { of } from 'rxjs';\n\nconst sumObserver = {\n  sum: 0,\n  next(value) {\n    console.log('Adding: ' + value);\n    this.sum = this.sum + value;\n  },\n  error() {\n    // We actually could just remove this method,\n    // since we do not really care about errors right now.\n  },\n  complete() {\n    console.log('Sum equals: ' + this.sum);\n  }\n};\n\nof(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n  .subscribe(sumObserver);\n\n// Logs:\n// \"Adding: 1\"\n// \"Adding: 2\"\n// \"Adding: 3\"\n// \"Sum equals: 6\"\n</code-example>\n<h3>Subscribe with functions</h3>\n<code-example language=\"ts\">\nimport { of } from 'rxjs'\n\nlet sum = 0;\n\nof(1, 2, 3).subscribe(\n  value => {\n    console.log('Adding: ' + value);\n    sum = sum + value;\n  },\n  undefined,\n  () => console.log('Sum equals: ' + sum)\n);\n\n// Logs:\n// \"Adding: 1\"\n// \"Adding: 2\"\n// \"Adding: 3\"\n// \"Sum equals: 6\"\n</code-example>\n<h3>Cancel a subscription</h3>\n<code-example language=\"ts\">\nimport { interval } from 'rxjs';\n\nconst subscription = interval(1000).subscribe(\n  num => console.log(num),\n  undefined,\n  () => {\n    // Will not be called, even when cancelling subscription.\n    console.log('completed!');\n  }\n);\n\nsetTimeout(() => {\n  subscription.unsubscribe();\n  console.log('unsubscribed!');\n}, 2500);\n\n// Logs:\n// 0 after 1s\n// 1 after 2s\n// \"unsubscribed!\" after 2.5s\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"_trySubscribe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    _trySubscribe()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">_trySubscribe(sink: Subscriber&#x3C;T>): TeardownLogic</code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>sink</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>Subscriber<t></t></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>TeardownLogic</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"forEach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    forEach()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise&#x3C;void></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>next</td>\n      \n      <td class=\"param-description\">\n              <p>a handler for each value emitted by the observable</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>promiseCtor</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>a constructor function used to instantiate the Promise</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n <p><code>Promise&#x3C;void></code>: a promise that either resolves on observable completion or\n rejects with the handled error</p>\n \n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"pipe\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    pipe()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p>Used to stitch together functional operators into a chain.</p>\n\n      </td>\n    </tr>\n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\">11 overloads...</h4></summary>\n          <div class=\"detail-contents\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe(): Observable&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;T></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A>(op1: OperatorFunction&#x3C;T, A>): Observable&#x3C;A></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;A></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>): Observable&#x3C;B></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;B></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>): Observable&#x3C;C></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;C></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>): Observable&#x3C;D></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;D></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>): Observable&#x3C;E></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;E></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E, F>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>, op6: OperatorFunction&#x3C;E, F>): Observable&#x3C;F></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<e, f=\"\"></e,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;F></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E, F, G>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>, op6: OperatorFunction&#x3C;E, F>, op7: OperatorFunction&#x3C;F, G>): Observable&#x3C;G></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<e, f=\"\"></e,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<f, g=\"\"></f,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;G></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E, F, G, H>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>, op6: OperatorFunction&#x3C;E, F>, op7: OperatorFunction&#x3C;F, G>, op8: OperatorFunction&#x3C;G, H>): Observable&#x3C;H></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<e, f=\"\"></e,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<f, g=\"\"></f,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<g, h=\"\"></g,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;H></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E, F, G, H, I>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>, op6: OperatorFunction&#x3C;E, F>, op7: OperatorFunction&#x3C;F, G>, op8: OperatorFunction&#x3C;G, H>, op9: OperatorFunction&#x3C;H, I>): Observable&#x3C;I></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<e, f=\"\"></e,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<f, g=\"\"></f,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<g, h=\"\"></g,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op9</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<h, i=\"\"></h,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;I></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">pipe&#x3C;A, B, C, D, E, F, G, H, I>(op1: OperatorFunction&#x3C;T, A>, op2: OperatorFunction&#x3C;A, B>, op3: OperatorFunction&#x3C;B, C>, op4: OperatorFunction&#x3C;C, D>, op5: OperatorFunction&#x3C;D, E>, op6: OperatorFunction&#x3C;E, F>, op7: OperatorFunction&#x3C;F, G>, op8: OperatorFunction&#x3C;G, H>, op9: OperatorFunction&#x3C;H, I>, ...operations: OperatorFunction&#x3C;any, any>[]): Observable&#x3C;{\n}></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<t, a=\"\"></t,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<a, b=\"\"></a,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<b, c=\"\"></b,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<c, d=\"\"></c,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<d, e=\"\"></d,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<e, f=\"\"></e,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op7</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<f, g=\"\"></f,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op8</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<g, h=\"\"></g,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>op9</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<h, i=\"\"></h,></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>operations</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>OperatorFunction<any, any=\"\">[]</any,></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;{ }></code></p>\n\n\n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"toPromise\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3>\n    toPromise()\n    \n  </h3></th></tr></thead>\n  <tbody>\n    \n  <tr>\n      <td>\n        <details class=\"overloads\">\n          <summary><h4 class=\"no-anchor\">3 overloads...</h4></summary>\n          <div class=\"detail-contents\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">toPromise&#x3C;T>(): Promise&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Promise&#x3C;T></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">toPromise&#x3C;T>(PromiseCtor: typeof Promise): Promise&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>PromiseCtor</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>typeof Promise</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Promise&#x3C;T></code></p>\n\n\n\n\n\n\n\n                <hr class=\"hr-margin fullwidth\">\n              \n                <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">toPromise&#x3C;T>(PromiseCtor: PromiseConstructorLike): Promise&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>PromiseCtor</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>PromiseConstructorLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Promise&#x3C;T></code></p>\n\n\n\n\n\n\n\n                \n              \n          </div>\n        </details>\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/class/AsyncSubject\n - api/index/class/BehaviorSubject\n - api/index/class/ConnectableObservable\n - api/index/class/GroupedObservable\n - api/index/class/Notification\n - api/index/class/ReplaySubject\n - api/index/class/Subject\n - api/index/class/Subscriber\n - api/index/const/NEVER\n - api/index/function/defer\n - api/index/function/empty\n - api/index/function/generate\n - api/index/function/isObservable\n - api/index/function/throwError\n - api/operators/onErrorResumeNext\n - api/operators/tap\n - api/webSocket/WebSocketSubject\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/class/Observable#_isScalar\n - api/index/class/Observable#_trySubscribe\n - api/index/class/Observable#constructor()\n - api/index/class/Observable#create\n - api/index/class/Observable#forEach\n - api/index/class/Observable#if\n - api/index/class/Observable#lift\n - api/index/class/Observable#operator\n - api/index/class/Observable#pipe\n - api/index/class/Observable#source\n - api/index/class/Observable#subscribe\n - api/index/class/Observable#throw\n - api/index/class/Observable#toPromise\n - api/index/function/of\n - api/index/interface/Observer\n - api/index/interface/Subscribable\n - https://github.com/reactivex/rxjs/edit/master/src/internal/Observable.ts?message=docs(index)%3A%20describe%20your%20change...#L12-L363\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/Observable.ts#L12-L363\n-->"
}