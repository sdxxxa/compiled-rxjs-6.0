{
  "id": "api/index/const/asyncScheduler",
  "title": "async",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/async.ts?message=docs(index)%3A%20describe%20your%20change...#L56-L55\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/scheduler/async.ts#L56-L55\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/const/asyncScheduler\", \"name\": \"async\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>async</h1>\n    <label class=\"api-type-label const\">const</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Async Scheduler</p>\n<p></p>\n  \n  \n  \n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">\n  const async: any;\n  </code-example>\n\n  \n  \n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span></p>\n<p><code>async</code> scheduler schedules tasks asynchronously, by putting them on the JavaScript\nevent loop queue. It is best used to delay tasks in time or to schedule tasks repeating\nin intervals.</p>\n<p>If you just want to \"defer\" task, that is to perform it right after currently\nexecuting synchronous code ends (commonly achieved by <code>setTimeout(deferredTask, 0)</code>),\nbetter choice will be the <a href=\"api/index/const/asapScheduler\"><code>asap</code></a> scheduler.</p>\n<h2>Examples</h2>\n<p>Use async scheduler to delay task</p>\n<code-example language=\"ts\">\nimport { asyncScheduler } from 'rxjs';\n\nconst task = () => console.log('it works!');\n\nasyncScheduler.schedule(task, 2000);\n\n// After 2 seconds logs:\n// \"it works!\"\n</code-example>\n<p>Use async scheduler to repeat task in intervals</p>\n<code-example language=\"ts\">\nimport { asyncScheduler } from 'rxjs';\n\nfunction task(state) {\n  console.log(state);\n  this.schedule(state + 1, 1000); // `this` references currently executing Action,\n                                  // which we reschedule with new state and delay\n}\n\nasyncScheduler.schedule(task, 3000, 0);\n\n// Logs:\n// 0 after 3s\n// 1 after 4s\n// 2 after 5s\n// 3 after 6s\n</code-example>\n\n</section>\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/const/animationFrameScheduler\n - api/index/const/asapScheduler\n - api/index/const/queueScheduler\n - api/index/function/bindCallback\n - api/index/function/timer\n - api/operators/subscribeOn\n - api/operators/timeInterval\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/const/asapScheduler\n - https://github.com/reactivex/rxjs/edit/master/src/internal/scheduler/async.ts?message=docs(index)%3A%20describe%20your%20change...#L56-L55\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/scheduler/async.ts#L56-L55\n-->"
}