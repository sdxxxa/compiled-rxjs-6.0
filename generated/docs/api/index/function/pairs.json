{
  "id": "api/index/function/pairs",
  "title": "pairs",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/pairs.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L76\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/pairs.ts#L5-L76\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/pairs\", \"name\": \"pairs\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>pairs</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Convert an object into an Observable of <code>[key, value]</code> pairs.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> pairs&#x3C;T>(obj: Object, scheduler?: SchedulerLike): Observable&#x3C;[string, T]></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>obj</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>Object</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;[string, T]></code></p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Turn entries of an object into a stream.</span></p>\n<img src=\"./img/pairs.png\" width=\"100%\">\n<p><code>pairs</code> takes an arbitrary object and returns an Observable that emits arrays. Each\nemitted array has exactly two elements - the first is a key from the object\nand the second is a value corresponding to that key. Keys are extracted from\nan object via <code>Object.keys</code> function, which means that they will be only\nenumerable keys that are present on an object directly - not ones inherited\nvia prototype chain.</p>\n<p>By default these arrays are emitted synchronously. To change that you can\npass a <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> as a second argument to <code>pairs</code>.</p>\n<p>@example Converts a javascript object to an Observable</p>\n<code-example language=\"ts\">\nimport { pairs } from 'rxjs';\n\nconst obj = {\n  foo: 42,\n  bar: 56,\n  baz: 78\n};\n\npairs(obj)\n.subscribe(\n  value => console.log(value),\n  err => {},\n  () => console.log('the end!')\n);\n\n// Logs:\n// [\"foo\", 42],\n// [\"bar\", 56],\n// [\"baz\", 78],\n// \"the end!\"\n</code-example>\n<p>@param {Object} obj The object to inspect and turn into an\nObservable sequence.\n@param {Scheduler} [scheduler] An optional IScheduler to schedule\nwhen resulting Observable will emit values.\n@returns {(Observable&#x3C;Array&#x3C;string|T>>)} An observable sequence of\n[key, value] pairs from the object.</p>\n\n</section>\n\n\n\n  \n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/interface/SchedulerLike\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/pairs.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L76\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/pairs.ts#L5-L76\n-->"
}