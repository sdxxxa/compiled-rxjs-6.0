{
  "id": "api/index/function/iif",
  "title": "iif",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/iif.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L100\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/iif.ts#L5-L100\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/iif\", \"name\": \"iif\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>iif</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Decides at subscription time which Observable will actually be subscribed.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> iif&#x3C;T, F>(condition: () => boolean, trueResult: SubscribableOrPromise&#x3C;T> = EMPTY, falseResult: SubscribableOrPromise&#x3C;F> = EMPTY): Observable&#x3C;T | F></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>condition</td>\n      \n      <td class=\"param-description\">\n              <p>Condition which Observable should be chosen.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>trueResult</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>EMPTY</code>.</p>\n        <p>Type: <code>SubscribableOrPromise<t></t></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>falseResult</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>EMPTY</code>.</p>\n        <p>Type: <code>SubscribableOrPromise<f></f></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;T | F></code>: Either first or second Observable, depending on condition.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\"><code>If</code> statement for Observables.</span></p>\n<p><code>iif</code> accepts a condition function and two Observables. When\nan Observable returned by the operator is subscribed, condition function will be called.\nBased on what boolean it returns at that moment, consumer will subscribe either to\nthe first Observable (if condition was true) or to the second (if condition was false). Condition\nfunction may also not return anything - in that case condition will be evaluated as false and\nsecond Observable will be subscribed.</p>\n<p>Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\nwas left undefined, resulting stream will simply complete immediately. That allows you to, rather\nthen controlling which Observable will be subscribed, decide at runtime if consumer should have access\nto given Observable or not.</p>\n<p>If you have more complex logic that requires decision between more than two Observables, <a href=\"api/index/function/defer\"><code>defer</code></a>\nwill probably be a better choice. Actually <code>iif</code> can be easily implemented with <a href=\"api/index/function/defer\"><code>defer</code></a>\nand exists only for convenience and readability reasons.</p>\n<h2>Examples</h2>\n<h3>Change at runtime which Observable will be subscribed</h3>\n<code-example language=\"ts\">\nimport { iif, of } from 'rxjs';\n\nlet subscribeToFirst;\nconst firstOrSecond = iif(\n  () => subscribeToFirst,\n  of('first'),\n  of('second'),\n);\n\nsubscribeToFirst = true;\nfirstOrSecond.subscribe(value => console.log(value));\n\n// Logs:\n// \"first\"\n\nsubscribeToFirst = false;\nfirstOrSecond.subscribe(value => console.log(value));\n\n// Logs:\n// \"second\"\n</code-example>\n<h3>Control an access to an Observable</h3>\n<code-example language=\"ts\">\nlet accessGranted;\nconst observableIfYouHaveAccess = iif(\n  () => accessGranted,\n  of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n);\n\naccessGranted = true;\nobservableIfYouHaveAccess.subscribe(\n  value => console.log(value),\n  err => {},\n  () => console.log('The end'),\n);\n\n// Logs:\n// \"It seems you have an access...\"\n// \"The end\"\n\naccessGranted = false;\nobservableIfYouHaveAccess.subscribe(\n  value => console.log(value),\n  err => {},\n  () => console.log('The end'),\n);\n\n// Logs:\n// \"The end\"\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/defer\"><code>defer</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/defer\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/iif.ts?message=docs(index)%3A%20describe%20your%20change...#L5-L100\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/iif.ts#L5-L100\n-->"
}