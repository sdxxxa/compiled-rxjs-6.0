{
  "id": "api/index/function/timer",
  "title": "timer",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/timer.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L81\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/timer.ts#L7-L81\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/timer\", \"name\": \"timer\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>timer</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Creates an Observable that starts emitting after an <code>dueTime</code> and\nemits ever increasing numbers after each <code>period</code> of time thereafter.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> timer(dueTime: number | Date = 0, periodOrScheduler?: number | SchedulerLike, scheduler?: SchedulerLike): Observable&#x3C;number></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>dueTime</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>0</code>.</p>\n<p>        The initial delay time specified as a Date object or as an integer denoting\nmilliseconds to wait before emitting the first value of 0`.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>periodOrScheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        The period of time between emissions of the\nsubsequent numbers.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n      <p>        Optional. Default is <code>undefined</code>.</p>\n<p>        The <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to use for scheduling\nthe emission of values, and providing a notion of \"time\".</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;number></code>: An Observable that emits a <code>0</code> after the\n<code>dueTime</code> and ever increasing numbers after each <code>period</code> of time\nthereafter.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Its like <a href=\"api/index/function/interval\"><code>interval</code></a>, but you can specify when\nshould the emissions start.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/timer.png\" width=\"100%\" alt=\"timer marble diagram\"></p>\n<p><code>timer</code> returns an Observable that emits an infinite sequence of ascending\nintegers, with a constant interval of time, <code>period</code> of your choosing\nbetween those emissions. The first emission happens after the specified\n<code>dueTime</code>. The initial delay may be a <code>Date</code>. By default, this\noperator uses the <a href=\"api/index/const/asyncScheduler\"><code>async</code></a> <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to provide a notion of time, but you\nmay pass any <a href=\"api/index/interface/SchedulerLike\"><code>SchedulerLike</code></a> to it. If <code>period</code> is not specified, the output\nObservable emits only one value, <code>0</code>. Otherwise, it emits an infinite\nsequence.</p>\n<h2>Examples</h2>\n<h3>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</h3>\n<code-example language=\"ts\">\nimport { timer } from 'rxjs';\n\nconst numbers = timer(3000, 1000);\nnumbers.subscribe(x => console.log(x));\n</code-example>\n<h3>Emits one number after five seconds</h3>\n<code-example language=\"ts\">\nimport { timer } from 'rxjs';\n\nconst numbers = timer(5000);\nnumbers.subscribe(x => console.log(x));\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/interval\"><code>interval</code></a>\n</li>\n    <li><a href=\"api/operators/delay\"><code>delay</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/interval\n - api/index/function/range\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/const/asyncScheduler\n - api/index/function/interval\n - api/index/interface/SchedulerLike\n - api/operators/delay\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/timer.ts?message=docs(index)%3A%20describe%20your%20change...#L7-L81\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/timer.ts#L7-L81\n-->"
}