{
  "id": "api/index/function/concat",
  "title": "concat",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/concat.ts?message=docs(index)%3A%20describe%20your%20change...#L17-L127\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/concat.ts#L17-L127\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/concat\", \"name\": \"concat\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>concat</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Creates an output Observable which sequentially emits all values from given\nObservable and then moves on to the next.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat&#x3C;O extends ObservableInput&#x3C;any>, R>(...observables: Array&#x3C;O | SchedulerLike>): Observable&#x3C;ObservedValueOf&#x3C;O> | R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>observables</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>Array<o |=\"\" schedulerlike=\"\"></o></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O> | R></code>: All values of each passed Observable merged into a\nsingle Observable, in order, in serial fashion.</p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Concatenates multiple Observables together by\nsequentially emitting their values, one Observable after the other.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/concat.png\" width=\"100%\" alt=\"concat marble diagram\"></p>\n<p><code>concat</code> joins multiple Observables together, by subscribing to them one at a time and\nmerging their results into the output Observable. You can pass either an array of\nObservables, or put them directly as arguments. Passing an empty array will result\nin Observable that completes immediately.</p>\n<p><code>concat</code> will subscribe to first input Observable and emit all its values, without\nchanging or affecting them in any way. When that Observable completes, it will\nsubscribe to then next Observable passed and, again, emit its values. This will be\nrepeated, until the operator runs out of Observables. When last input Observable completes,\n<code>concat</code> will complete as well. At any given moment only one Observable passed to operator\nemits values. If you would like to emit values from passed Observables concurrently, check out\n<a href=\"api/index/function/merge\"><code>merge</code></a> instead, especially with optional <code>concurrent</code> parameter. As a matter of fact,\n<code>concat</code> is an equivalent of <code>merge</code> operator with <code>concurrent</code> parameter set to <code>1</code>.</p>\n<p>Note that if some input Observable never completes, <code>concat</code> will also never complete\nand Observables following the one that did not complete will never be subscribed. On the other\nhand, if some Observable simply completes immediately after it is subscribed, it will be\ninvisible for <code>concat</code>, which will just move on to the next Observable.</p>\n<p>If any Observable in chain errors, instead of passing control to the next Observable,\n<code>concat</code> will error immediately as well. Observables that would be subscribed after\nthe one that emitted error, never will.</p>\n<p>If you pass to <code>concat</code> the same Observable many times, its stream of values\nwill be \"replayed\" on every subscription, which means you can repeat given Observable\nas many times as you like. If passing the same Observable to <code>concat</code> 1000 times becomes tedious,\nyou can always use <a href=\"api/operators/repeat\"><code>repeat</code></a>.</p>\n<h2>Examples</h2>\n<h3>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</h3>\n<code-example language=\"ts\">\nimport { concat, interval, range } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst timer = interval(1000).pipe(take(4));\nconst sequence = range(1, 10);\nconst result = concat(timer, sequence);\nresult.subscribe(x => console.log(x));\n\n// results in:\n// 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n</code-example>\n<h3>Concatenate an array of 3 Observables</h3>\n<code-example language=\"ts\">\nimport { concat, interval } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst timer1 = interval(1000).pipe(take(10));\nconst timer2 = interval(2000).pipe(take(6));\nconst timer3 = interval(500).pipe(take(10));\nconst result = concat([timer1, timer2, timer3]); // note that array is passed\nresult.subscribe(x => console.log(x));\n\n// results in the following:\n// (Prints to console sequentially)\n// -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n// -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n// -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n</code-example>\n<h3>Concatenate the same Observable to repeat it</h3>\n<code-example language=\"ts\">\nimport { concat, interval } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nconst timer = interval(1000).pipe(take(2));\n\nconcat(timer, timer) // concatenating the same Observable!\n.subscribe(\n  value => console.log(value),\n  err => {},\n  () => console.log('...and it is done!')\n);\n\n// Logs:\n// 0 after 1s\n// 1 after 2s\n// 0 after 3s\n// 1 after 4s\n// \"...and it is done!\" also after 4s\n</code-example>\n\n</section>\n\n\n<section class=\"overloads\">\n  <h2>Overloads</h2>\n  <table>\n  \n  <tbody><tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O2</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O2</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O3</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O2</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O3</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O4</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4> | ObservedValueOf&#x3C;O5>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O2</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O3</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O4</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O5</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4> | ObservedValueOf&#x3C;O5>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4> | ObservedValueOf&#x3C;O5> | ObservedValueOf&#x3C;O6>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v1</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O1</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v2</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O2</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v3</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O3</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v4</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O4</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v5</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O5</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>v6</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>O6</code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O1> | ObservedValueOf&#x3C;O2> | ObservedValueOf&#x3C;O3> | ObservedValueOf&#x3C;O4> | ObservedValueOf&#x3C;O5> | ObservedValueOf&#x3C;O6>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(...observables: (O | SchedulerLike)[]): Observable&#x3C;ObservedValueOf&#x3C;O>></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>observables</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(O | SchedulerLike)[]</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;ObservedValueOf&#x3C;O>></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  <tr>\n    <td>\n      <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> concat(...observables: (ObservableInput&#x3C;any> | SchedulerLike)[]): Observable&#x3C;R></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>observables</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>(ObservableInput<any> | SchedulerLike)[]</any></code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;R></code></p>\n\n\n\n\n\n\n\n    </td>\n  </tr>\n  \n  </tbody></table>\n</section>\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/operators/concatAll\"><code>concatAll</code></a>\n</li>\n    <li><a href=\"api/operators/concatMap\"><code>concatMap</code></a>\n</li>\n    <li><a href=\"api/operators/concatMapTo\"><code>concatMapTo</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/deprecations\n - api/index\n - api/index/function/onErrorResumeNext\n - api/operators/concat\n - api/operators/concatAll\n - api/operators/concatMap\n - api/operators/concatMapTo\n - api/operators/onErrorResumeNext\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/merge\n - api/operators/concatAll\n - api/operators/concatMap\n - api/operators/concatMapTo\n - api/operators/repeat\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/concat.ts?message=docs(index)%3A%20describe%20your%20change...#L17-L127\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/concat.ts#L17-L127\n-->"
}