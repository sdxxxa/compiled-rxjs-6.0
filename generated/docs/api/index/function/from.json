{
  "id": "api/index/function/from",
  "title": "from",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/reactivex/rxjs/edit/master/src/internal/observable/from.ts?message=docs(index)%3A%20describe%20your%20change...#L14-L136\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/from.ts#L14-L136\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/index\", \"name\": \"rxjs/index\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/index/function/from\", \"name\": \"from\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/index\">rxjs/index</a>\n  </div>\n  <header class=\"api-header\">\n    <h1>from</h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p>Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> from&#x3C;T>(input: ObservableInput&#x3C;T>, scheduler?: SchedulerLike): Observable&#x3C;T></code-example>\n\n\n\n<h4 class=\"no-anchor\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>input</td>\n      \n      <td class=\"param-description\">\n              <p>Type: <code>ObservableInput<t></t></code>.</p>\n        \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>scheduler</td>\n      \n      <td class=\"param-description\">\n              <p>Optional. Default is <code>undefined</code>.</p>\n        <p>Type: <code>SchedulerLike</code>.</p>\n        \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\">Returns</h4>\n<p><code>Observable&#x3C;T></code>: </p>\n\n\n\n\n\n\n\n\n\n  \n\n<section class=\"description\">\n  <h2>Description</h2>\n  <p><span class=\"informal\">Converts almost anything to an Observable.</span></p>\n<p><img src=\"/assets/images/marble-diagrams/from.png\" width=\"100%\" alt=\"from marble diagram\"></p>\n<p><code>from</code> converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\nobject into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\nas an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\nconverted through this operator.</p>\n<h2>Examples</h2>\n<h3>Converts an array to an Observable</h3>\n<code-example language=\"ts\">\nimport { from } from 'rxjs';\n\nconst array = [10, 20, 30];\nconst result = from(array);\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 10\n// 20\n// 30\n</code-example>\n<hr>\n<h3>Convert an infinite iterable (from a generator) to an Observable</h3>\n<code-example language=\"ts\">\nimport { from } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nfunction* generateDoubles(seed) {\n   let i = seed;\n   while (true) {\n     yield i;\n     i = 2 * i; // double it\n   }\n}\n\nconst iterator = generateDoubles(3);\nconst result = from(iterator).pipe(take(10));\n\nresult.subscribe(x => console.log(x));\n\n// Logs:\n// 3\n// 6\n// 12\n// 24\n// 48\n// 96\n// 192\n// 384\n// 768\n// 1536\n</code-example>\n<hr>\n<h3>With async scheduler</h3>\n<code-example language=\"ts\">\nimport { from, asyncScheduler } from 'rxjs';\n\nconsole.log('start');\n\nconst array = [10, 20, 30];\nconst result = from(array, asyncScheduler);\n\nresult.subscribe(x => console.log(x));\n\nconsole.log('end');\n\n// Logs:\n// start\n// end\n// 10\n// 20\n// 30\n</code-example>\n\n</section>\n\n\n\n  \n\n  \n<section class=\"see-also\">\n  <h2>See Also</h2>\n  <ul>\n  \n    <li><a href=\"api/index/function/fromEvent\"><code>fromEvent</code></a>\n</li>\n    <li><a href=\"api/index/function/fromEventPattern\"><code>fromEventPattern</code></a>\n</li>\n  </ul>\n</section>\n\n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/index\n - api/index/function/bindCallback\n - api/index/function/bindNodeCallback\n - api/index/function/generate\n - api/index/function/of\n-->\n<!-- links from this doc:\n - /api\n - api/index\n - api/index/function/fromEvent\n - api/index/function/fromEventPattern\n - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\n - https://github.com/reactivex/rxjs/edit/master/src/internal/observable/from.ts?message=docs(index)%3A%20describe%20your%20change...#L14-L136\n - https://github.com/reactivex/rxjs/tree/6.4.0/src/internal/observable/from.ts#L14-L136\n-->"
}